# -*- sh -*-
[ -z $HYBRIS_ANDROID_URL ] && HYBRIS_ANDROID_URL=git://github.com/mer-hybris/android.git
[ -z $HYBRIS_REMOTE ] && HYBRIS_REMOTE=git://github.com/mer-hybris

check()
{
    if [ ! $HYBRIS_ANDROID_BRANCH ] ; then
        return 1
    fi

    if [ ! $ANDROID_ROOT ] ; then
        return 1
    fi


    if [ ! $VENDOR ] ; then
        return 1
    fi

    if [ ! $DEVICE ] ; then
        return 1
    fi

    if [ ! $HABUILD_DEVICE ] ; then
        return 1
    fi

    if [ ! $EDGE ] ; then
        return 1
    fi

    if [ ! $PORT_ARCH ] ; then
        return 1
    fi
}



sync()
{
    mkdir -p "$ANDROID_ROOT"

    cd "$ANDROID_ROOT"
    repo init -u "$HYBRIS_ANDROID_URL" \
         -b "$HYBRIS_ANDROID_BRANCH" \
         -m default.xml

    repo forall -c git reset --hard HEAD || true
    repo forall -c git am --abort || true
    repo forall -c git clean -d -x -f || true
    repo  sync -j8 --fetch-submodules
    mkdir -p hybris
    git_clone_or_update \
        $HYBRIS_REMOTE/droid-config-$VENDOR-$DEVICE \
        hybris/droid-configs -b master
    git_clone_or_update \
        $HYBRIS_REMOTE/droid-hal-img-boot-$VENDOR-$DEVICE \
        hybris/mw/droid-hal-img-boot-$VENDOR-$DEVICE -b master
    git_clone_or_update \
        $HYBRIS_REMOTE/droid-hal-version-$VENDOR-$DEVICE \
        hybris/droid-hal-version-$VENDOR-$DEVICE -b master
}


build()
{
    cd "$ANDROID_ROOT"
    export ANDROID_ROOT
    source build/envsetup.sh
    export USE_CCACHE=1
    lunch aosp_${DEVICE_KERNEL_NUM:-$DEVICE_NUM}-userdebug
    # Adjust XX to your building capabilities
    make -j15 hybris-hal
}


build_sfos()
{
    export ANDROID_ROOT
    cd $ANDROID_ROOT

    #DEVICE=$HABUILD_DEVICE
    ./rpm/dhd/helpers/build_packages.sh --droid-hal
}
